{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Launch seq_skiplist",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/seq_skiplist",
      "preLaunchTask": "Build seq_skiplist",
      "args": [
        "2",
        "10",
        "0.1",
        "0.1",
        "0.8",
        "0",
        "25",
        "4",
        "0.5",
        "unique"
      ],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}/build",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        },
        {
          "description": "Set Disassembly Flavor to Intel",
          "text": "-gdb-set disassembly-flavor intel",
          "ignoreFailures": true
        }
      ]
    },

    {
      "name": "Run lock_free_skiplist_benchmark",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/lock_free_skiplist_benchmark",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "miDebuggerPath": "/usr/bin/gdb",
      "setupCommands": [
          {
              "description": "Enable pretty-printing for gdb",
              "text": "-enable-pretty-printing",
              "ignoreFailures": true
          }
      ],
      "preLaunchTask": "build-lock-free-skiplist"
  },
    {
      "name": "Launch coarse_skiplist",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/coarse_skiplist",
      "preLaunchTask": "Build coarse_skiplist",
      "args": [
        "2",
        "10",
        "0.1",
        "0.1",
        "0.8",
        "0",
        "25",
        "4",
        "0.5",
        "unique"
      ],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}/build",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        },
        {
          "description": "Set Disassembly Flavor to Intel",
          "text": "-gdb-set disassembly-flavor intel",
          "ignoreFailures": true
        }
      ]
    },
    {
      "name": "Launch benchmark",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/benchmark_debug",
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}/build",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        },
        {
          "description": "Set Disassembly Flavor to Intel",
          "text": "-gdb-set disassembly-flavor intel",
          "ignoreFailures": true
        },
        {
          "description": "Set up compilation directories for GDB",
          "text": "-gdb-set directories ${workspaceFolder}/src:${workspaceFolder}/inc"
        }
      ],
    },
    {
      "name": "C/C++: gcc build and debug active file",
      "type": "cppdbg",
      "request": "launch",
      "program": "${fileDirname}/${fileBasenameNoExtension}",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${fileDirname}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        },
        {
          "description": "Set Disassembly Flavor to Intel",
          "text": "-gdb-set disassembly-flavor intel",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "C/C++: gcc build active file",
      "miDebuggerPath": "/usr/bin/gdb"
    }
  ]
}